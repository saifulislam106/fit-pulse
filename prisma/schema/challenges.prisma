model Challenge{
    id        String    @id @default(uuid())
    title     String
    
   creatorId String
   creator   User     @relation("CreatedChallenges", fields: [creatorId], references: [id])

   hostId    String?
   host      User?     @relation("HostedChallenges", fields: [hostId], references: [id])
}
enum ChallengeCategory {
  STEPS
  WORKOUT
  NUTRITION
  MEDITATION
  CUSTOM
}

model ChallengeProgress {
  id                    String                 @id @default(uuid())
  
  userId                String
  user                  User                   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  eventId               String
  event                 Event                  @relation(fields: [eventId], references: [id], onDelete: Cascade)
  
  currentValue          Float                  @default(0)
  targetValue           Float
  completedDays         Int                    @default(0)
  totalDays             Int
  
  lastUpdated           DateTime               @default(now())
  dailyEntries          Json                   @default("[]") // Array of {date, value}
  
  isCompleted           Boolean                @default(false)
  completedAt           DateTime?
  
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  
  @@unique([userId, eventId])
  @@map("challenge_progress")
}

model UserAchievement {
  id                    String                 @id @default(uuid())
  
  userId                String
  user                  User                   @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  eventId               String
  achievementName       String
  achievementIcon       String
  description           String?
  
  earnedAt              DateTime               @default(now())
  
  @@map("user_achievements")
}
